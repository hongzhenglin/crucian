<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	
	<context:component-scan base-package="com.crucian.rpc"/>
	<context:property-placeholder location="classpath:config.properties"/>
	
	<!-- 配置服务发现组件 -->
	<bean id="serviceDiscovery" class="com.crucian.rpc.core.client.ServiceDiscovery">
		<constructor-arg name="registryAddress" value="${registry.address}"/>
	</bean>
	<!-- 配置 RPC 代理 -->
	<bean id="rpcProxy" class="com.crucian.rpc.core.client.RpcProxy">
		<constructor-arg name="serviceDiscovery" ref="serviceDiscovery"/>
	</bean>
</beans>
